What is Cache?:
A mechanism used to store the frequent access data.
What is use of cache?
By using cache, we can improve api performance(response time) and decrease main db load.
How to implement cache?
Here I am going to use redis cache:
Add the redis dependency
Annotate the main class with @EnableCaching application to enable the cache.
@Cacheable Workflow
📌 This workflow explains how @Cacheable works when fetching data.
plaintext
CopyEdit
                 ┌─────────────────────────────┐
                 │         Client              │
                 └────────────┬───────────────┘
                              │  Call method getProduct(id)
                              ▼
                 ┌─────────────────────────────┐
                 │      Cache Lookup (Redis)   │
                 └────────────┬───────────────┘
                              │
                  Does cache contain key "id"?
                      ├── Yes ──> Return cached value ✅
                      │
                      └── No  ────> Call Database (DB)
                                   ▼
                 ┌─────────────────────────────┐
                 │        Fetch from DB        │
                 └────────────┬───────────────┘
                              │  Save result in cache
                              ▼
                 ┌─────────────────────────────┐
                 │   Store data in Redis Cache │
                 └────────────┬───────────────┘
                              │
                 Return data to client ✅


@CachePut Workflow
📌 This workflow explains how @CachePut updates the cache every time the method is called.
plaintext
CopyEdit
                 ┌─────────────────────────────┐
                 │         Client              │
                 └────────────┬───────────────┘
                              │  Call updateProduct(product)
                              ▼
                 ┌─────────────────────────────┐
                 │        Update Database      │
                 └────────────┬───────────────┘
                              │
                              ▼
                 ┌─────────────────────────────┐
                 │  Update Cache (Redis)       │
                 └────────────┬───────────────┘
                              │  Store updated value
                              ▼
                 ┌─────────────────────────────┐
                 │ Return updated product ✅    │
                 └─────────────────────────────┘


@CacheEvict Workflow

                 ┌─────────────────────────────┐
                 │         Client              │
                 └────────────┬───────────────┘
                              │  Call deleteProduct(id)
                              ▼
                 ┌─────────────────────────────┐
                 │  Delete from Database (DB)  │
                 └────────────┬───────────────┘
                              │
                              ▼
                 ┌─────────────────────────────┐
                 │ Remove from Cache (Redis)   │
                 └────────────┬───────────────┘
                              │
                 Cache is cleared ✅


redis setup:
to pull the image:

docker pull redis:latest

// now run the image
docker run -d --name redis-container -p 6379:6379 redis:latest




